{
  "info": {
    "name": "Gits Books API",
    "description": "Complete API collection for Gits Books management system with authentication, CRUD operations, search, filter, and sort functionality.",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_email",
      "value": "admin@example.com",
      "type": "string"
    },
    {
      "key": "test_password",
      "value": "admin123",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Check API server health status"
      }
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success) {",
                  "        pm.test('Login successful', function() {",
                  "            pm.expect(response.success).to.be.true;",
                  "        });",
                  "        // Extract JWT token from cookie if needed",
                  "        const cookies = pm.cookies.all();",
                  "        console.log('Cookies:', cookies);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Books",
      "item": [
        {
          "name": "Get All Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books",
              "host": ["{{base_url}}"],
              "path": ["books"]
            },
            "description": "Get all books with default pagination"
          }
        },
        {
          "name": "Get Books with Pagination",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books?page=1&limit=5",
              "host": ["{{base_url}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "Search Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books?search=programming",
              "host": ["{{base_url}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "search",
                  "value": "programming"
                }
              ]
            }
          }
        },
        {
          "name": "Filter Books by Author",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books?authorId=1",
              "host": ["{{base_url}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "authorId",
                  "value": "1"
                }
              ]
            }
          }
        },
        {
          "name": "Filter Books by Year Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books?publishedYear=2000,2020",
              "host": ["{{base_url}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "publishedYear",
                  "value": "2000,2020"
                }
              ]
            }
          }
        },
        {
          "name": "Sort Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books?sortBy=title&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "sortBy",
                  "value": "title"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            }
          }
        },
        {
          "name": "Complex Query",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books?page=1&limit=10&search=code&authorId=1&sortBy=publishedYear&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "code"
                },
                {
                  "key": "authorId",
                  "value": "1"
                },
                {
                  "key": "sortBy",
                  "value": "publishedYear"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Book by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books/1",
              "host": ["{{base_url}}"],
              "path": ["books", "1"]
            }
          }
        },
        {
          "name": "Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Clean Code: A Handbook of Agile Software Craftsmanship\",\n  \"description\": \"A comprehensive guide to writing clean, maintainable code\",\n  \"publishedYear\": 2008,\n  \"authorId\": 1,\n  \"publisherId\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/books",
              "host": ["{{base_url}}"],
              "path": ["books"]
            }
          }
        },
        {
          "name": "Update Book",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Clean Code: Updated Edition\",\n  \"description\": \"Updated comprehensive guide to writing clean, maintainable code\",\n  \"publishedYear\": 2009\n}"
            },
            "url": {
              "raw": "{{base_url}}/books/1",
              "host": ["{{base_url}}"],
              "path": ["books", "1"]
            }
          }
        },
        {
          "name": "Delete Book",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books/1",
              "host": ["{{base_url}}"],
              "path": ["books", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "Authors",
      "item": [
        {
          "name": "Get All Authors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/authors",
              "host": ["{{base_url}}"],
              "path": ["authors"]
            }
          }
        },
        {
          "name": "Search Authors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/authors?search=robert",
              "host": ["{{base_url}}"],
              "path": ["authors"],
              "query": [
                {
                  "key": "search",
                  "value": "robert"
                }
              ]
            }
          }
        },
        {
          "name": "Sort Authors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/authors?sortBy=name&sortOrder=asc",
              "host": ["{{base_url}}"],
              "path": ["authors"],
              "query": [
                {
                  "key": "sortBy",
                  "value": "name"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Author by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/authors/1",
              "host": ["{{base_url}}"],
              "path": ["authors", "1"]
            }
          }
        },
        {
          "name": "Create Author",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Robert C. Martin\",\n  \"bio\": \"Software engineer, author, and speaker known for his work on software design principles and clean code practices.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/authors",
              "host": ["{{base_url}}"],
              "path": ["authors"]
            }
          }
        },
        {
          "name": "Update Author",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Robert Cecil Martin\",\n  \"bio\": \"Updated bio: Software engineer, author, and speaker known for his work on software design principles, clean code practices, and agile development.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/authors/1",
              "host": ["{{base_url}}"],
              "path": ["authors", "1"]
            }
          }
        },
        {
          "name": "Delete Author",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/authors/1",
              "host": ["{{base_url}}"],
              "path": ["authors", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "Publishers",
      "item": [
        {
          "name": "Get All Publishers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/publishers",
              "host": ["{{base_url}}"],
              "path": ["publishers"]
            }
          }
        },
        {
          "name": "Search Publishers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/publishers?search=prentice",
              "host": ["{{base_url}}"],
              "path": ["publishers"],
              "query": [
                {
                  "key": "search",
                  "value": "prentice"
                }
              ]
            }
          }
        },
        {
          "name": "Filter Publishers by Address",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/publishers?address=new york",
              "host": ["{{base_url}}"],
              "path": ["publishers"],
              "query": [
                {
                  "key": "address",
                  "value": "new york"
                }
              ]
            }
          }
        },
        {
          "name": "Get Publisher by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/publishers/1",
              "host": ["{{base_url}}"],
              "path": ["publishers", "1"]
            }
          }
        },
        {
          "name": "Create Publisher",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Prentice Hall\",\n  \"address\": \"Upper Saddle River, New Jersey, USA\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/publishers",
              "host": ["{{base_url}}"],
              "path": ["publishers"]
            }
          }
        },
        {
          "name": "Update Publisher",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Prentice Hall International\",\n  \"address\": \"Upper Saddle River, New Jersey, USA - Updated Address\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/publishers/1",
              "host": ["{{base_url}}"],
              "path": ["publishers", "1"]
            }
          }
        },
        {
          "name": "Delete Publisher",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/publishers/1",
              "host": ["{{base_url}}"],
              "path": ["publishers", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "404 - Invalid Route",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/invalid-route",
              "host": ["{{base_url}}"],
              "path": ["invalid-route"]
            }
          }
        },
        {
          "name": "400 - Invalid Book ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books/invalid-id",
              "host": ["{{base_url}}"],
              "path": ["books", "invalid-id"]
            }
          }
        },
        {
          "name": "404 - Non-existent Book",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books/99999",
              "host": ["{{base_url}}"],
              "path": ["books", "99999"]
            }
          }
        },
        {
          "name": "409 - Duplicate Author",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Robert C. Martin\",\n  \"bio\": \"Duplicate author test\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/authors",
              "host": ["{{base_url}}"],
              "path": ["authors"]
            }
          }
        },
        {
          "name": "400 - Validation Error",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"\",\n  \"publishedYear\": \"invalid-year\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/books",
              "host": ["{{base_url}}"],
              "path": ["books"]
            }
          }
        }
      ]
    }
  ]
}
